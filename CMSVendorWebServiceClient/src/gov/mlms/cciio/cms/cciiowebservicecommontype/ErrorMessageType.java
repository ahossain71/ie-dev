//
// Generated By:JAX-WS RI IBM 2.2.1-07/09/2014 01:53 PM(foreman)- (JAXB RI IBM 2.2.3-07/07/2014 12:56 PM(foreman)-)
//


package gov.mlms.cciio.cms.cciiowebservicecommontype;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for errorMessageType.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="errorMessageType">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="ME800 user id does not exist in MLMS database"/>
 *     &lt;enumeration value="ME810 Query returned no data"/>
 *     &lt;enumeration value="ME820 The system encountered an unexpected error"/>
 *     &lt;enumeration value="ME830 Database unavailable"/>
 *     &lt;enumeration value="ME840 System down for planned maintenance"/>
 *     &lt;enumeration value="ME850 Naming Context Error"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "errorMessageType")
@XmlEnum
public enum ErrorMessageType {

    @XmlEnumValue("ME800 user id does not exist in MLMS database")
    ME_800_USER_ID_DOES_NOT_EXIST_IN_MLMS_DATABASE("ME800 user id does not exist in MLMS database"),
    @XmlEnumValue("ME810 Query returned no data")
    ME_810_QUERY_RETURNED_NO_DATA("ME810 Query returned no data"),
    @XmlEnumValue("ME820 The system encountered an unexpected error")
    ME_820_THE_SYSTEM_ENCOUNTERED_AN_UNEXPECTED_ERROR("ME820 The system encountered an unexpected error"),
    @XmlEnumValue("ME830 Database unavailable")
    ME_830_DATABASE_UNAVAILABLE("ME830 Database unavailable"),
    @XmlEnumValue("ME840 System down for planned maintenance")
    ME_840_SYSTEM_DOWN_FOR_PLANNED_MAINTENANCE("ME840 System down for planned maintenance"),
    @XmlEnumValue("ME850 Naming Context Error")
    ME_850_NAMING_CONTEXT_ERROR("ME850 Naming Context Error");
    private final String value;

    ErrorMessageType(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static ErrorMessageType fromValue(String v) {
        for (ErrorMessageType c: ErrorMessageType.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
